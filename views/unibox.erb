<%
filter_keyword = @login.user.preference('emails.unibox.filter.keyword', "", params[:keyword])

q = "
    select 
        d.id as id_delivery,
        d.create_time,
        d.id_conversation, 

        c.id as id_campaign,
        c.name as campaign_name,

        l.id as id_lead, 
        l.name as lead_name,
        l.position as lead_position,
        l.stat_company_name as lead_company,
        
        d.body
        
    from eml_delivery d
    join eml_followup f on d.id_followup = d.id
    join eml_campaign c on c.id=f.id_campaign
    join \"user\" u on (d.id_user=u.id and u.id_account='#{@login.user.id_account}')
    join fl_lead l on (d.id_lead = l.id)
    where d.is_response = true
    #{filter_keyword.empty? ? "" : "and (l.name ilike '%#{filter_keyword}%' or l.position ilike '%#{filter_keyword}%' or l.stat_company_name ilike '%#{filter_keyword}%')"}
    order by d.create_time desc
    limit 100
"
%>

<!-- NavBar -->
<div class="mynavbar mysticky">
	<section class="row-fluid">	
		<div class="span6">
		    <%=nav2("Emails", "/emails", "unibox")%>
		</div>
		<div class="span6">
            <form action="/emails/unibox" method="get">
            <div class="pull-right">
                <div class="span8">
                    <input type='text' class='input-block-level select-all-on-focus' id='keyword' name='keyword' value='<%=filter_keyword.encode_html%>'/>
                </div>

                <button class="btn btn-blue btn-medium btn-submit" style="margin-left: 2px;" type="submit" onclick="">
                    <i class='icon-search'></i> Search
                </button>
            </div>
            </form>
		</div>
	</section>
</div>

<!-- Single Panel -->
<section class="row-fluid">
	<div class="span4 box widget-support-tickets inbox-contaier">
        <div class='unibox'>
            <%
            i = 0
            DB[q].all { |row|
                i += 1
                %>
                <div class='ticket' data-id-conversation='<%=row[:id_conversation].to_s%>'>
                    <span class="label label-green">reply</span>
                    <a href="#" title="<%=row[:lead_name].to_s.encode_html%>" class='load-conversation' data-id-conversation='<%=row[:id_conversation].to_s%>'>
                        <%=row[:lead_name].to_s.encode_html%>
                        <span><%=row[:lead_position].to_s.encode_html%> | <%=row[:lead_company].to_s.encode_html%></span>
                    </a>
                    <img src="/emails/images/avatar.png" alt="Avatar">
                    <span class="opened-by">
                        <%
                        if !row[:id_campaign].nil?
                        %> 
                        Campaign: <a href="/emails/campaigns/<%=row[:id_campaign]%>/edit" title="Open Campaign"><%=row[:campaign_name].to_s.encode_html%></a> <br>
                        <%
                        end # if row[:campaign_id].nil?
                        %>                         
                        <%=row[:create_time].to_s%>
                    </span>
                </div>
                <%
            }

            if i == 0
                %>
                <div>
                    <i>No conversations found.</i>
                </div>
                <%
            end # if i == 0
            %>
        </div>
    </div>

	<div class="span8 box">
        <div class='widget-chat chats-contaier'>
            <div class='chats' data-id-conversation=''>
                Click a Message to load the conversation.
            </div>
        </div>

        <div class='reply'>
            <textarea id="body" name='body' placeholder="Body" rows=2 style='width:100%;' maxlength=4000></textarea>
        </div>


    </div>
</section>


<script> 
    // add a deliver to the .chats div.
    // draw different if it is a message sent or a message received.
    function draw_delivery(d) {
        if ( d.is_response == false ) {
            // draw message sent
            //<div class="message left">
            //    <img src="/emails/images/avatar.png" alt="">
            //    <div>
            //        <a href="#" title="">Sarah Connor</a> says:
            //        <span class="pull-right">2 minutes ago</span>
            //        <div>
            //            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore.
            //            <button class="btn btn-mini btn-link">expand</button>
            //        </div>
            //    </div>
            //</div>
            div = $('<div class="message left"></div>');
            img = $('<img src="/emails/images/avatar.png" alt="">');
            div.append(img);
            div2 = $('<div></div>');
            a = $('<a href="#" title="">You</a>');
            div2.append(a);
            div2.append(' says: ');
            span = $('<span class="pull-right">'+d.create_time+'</span>');
            div2.append(span);
            div2.append('<br>');
            div2.append(d.simplified_body);
            div.append(div2);
            $('.chats').append(div);
        } else {
            // draw message received
            //<div class="message right">
            //    <img src="/emails/images/avatar.png" alt="">
            //    <div>
            //        <a href="#" title="">Second User</a> says:
            //        <span class="pull-right">2 minutes ago</span>
            //        <div>
            //            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore.
            //        </div>
            //    </div>
            //</div>
            div = $('<div class="message right"></div>');
            img = $('<img src="/emails/images/avatar.png" alt="">');
            div.append(img);
            div2 = $('<div></div>');
            a = $('<a href="#" title="">'+d.name+'</a>');
            div2.append(a);
            div2.append(' says: ');
            span = $('<span class="pull-right">'+d.create_time+'</span>');
            div2.append(span);
            div2.append('<br>');
            div2.append(d.simplified_body);
            div.append(div2);
            $('.chats').append(div);
        }
    } // function draw_delivery

    // draw a 'sending...' legend in the bottom of the .chats div.
    function draw_sending() {
        div = $('<div class="message right sending"></div>');
        div.append('Sending...');
        $('.chats').append(div);
    }

    // remove the 'sending...' legend in the bottom of the .chats div.
    function remove_sending() {
        $('.chats .sending').remove();
    }

    // create a new delivery by calling the access point /ajax/emails/create_delivery.json
    // draw the new delivery in the .chats div
    function create_delivery(body) {
        // get conversation id from the .chats div
        vid = $('.chats').data('id-conversation');
        // show loading legend
        draw_sending();
        // post ajax call to /ajax/emails/create_delivery.json
        $.ajax({
            url: '/ajax/emails/create_delivery.json',
            type: 'POST',
            data: {
                vid: vid,
                body: body,
            },
            success: function(data) {
                res = JSON.parse(data);
                if (res.status == 'success') {
                    // hide the sending legend
                    remove_sending();
                    // draw the new delivery
                    draw_delivery(res.delivery);
                    // set focus on textarea.body - TODO: this is not working!
                    //$('#body').focus();
                } else {
                    $('.chats').html('Error sending message ('+res.status+').');
                }
            },
            error: function(data) {
                $('.chats').html('Error sending.');
            }
        });
    }

    $(document).ready(function() {
        // hide the .reply div
        $('.reply').hide();

        // design the edit like a chat box.
        // reference: https://www.tiny.cloud/blog/build-a-chat-app-with-our-wysiwyg-editor/
        tinymce.init({
            height: 100,
            selector: '#body',
            plugins: "emoticons hr image link lists table autoresize", 
            toolbar: "bold italic link image emoticons | formatgroup paragraphgroup insertgroup | mySendButton",
            autosave_restore_when_empty: false,
            toolbar_groups: {
                formatgroup: {
                    icon: 'format',
                    tooltip: 'Formatting',
                    items: 'bold italic underline strikethrough | forecolor backcolor | superscript subscript | removeformat'
                },
                paragraphgroup: {
                    icon: 'paragraph',
                    tooltip: 'Paragraph format',
                    items: 'h1 h2 h3 | bullist numlist | alignleft aligncenter alignright | indent outdent'
                },
                insertgroup: {
                    icon: 'plus',
                    tooltip: 'Insert',
                    items: 'undo redo link image emoticons hr'
                }
            },
            skin: 'outside',
            toolbar_location: 'top',
            menubar: false,
            statusbar: false,
            placeholder: 'Type your message here',
            setup: function (editor) {
                editor.ui.registry.addButton("mySendButton", {
                    tooltip: "Send Message",
                    text: "Send",
                    onAction: function () {
                        create_delivery(editor.getContent());
                        editor.resetContent();
                    },
                });
            },
        });

        // load conversation
        $('.load-conversation').click(function(e) {
            // get conversation id
            vid = $(this).data('id-conversation');
            // show loading legend
            $('.chats').html('Loading...');
            // post ajax call to /ajax/emails/load_deliveries.json
            $.ajax({
                url: '/ajax/emails/load_deliveries.json',
                type: 'POST',
                data: {
                    vid: vid,
                },
                success: function(data) {
                    res = JSON.parse(data);
                    if (res.status == 'success') {
                        // empty the chats
                        $('.chats').html('');
                        // show the .reply div
                        $('.reply').show();
                        // set the data-id-conversation attribute
                        $('.chats').attr('data-id-conversation', vid);
                        // remove the .ticket-selected class from all the div.ticket
                        $('.ticket').removeClass('ticket-selected');
                        // add the .ticket-selected class to the div.ticket with the same data-id-conversation
                        $('.ticket[data-id-conversation="' + vid + '"]').addClass('ticket-selected');
                        // iterate the conversations
                        for (let i = 0; i<res.deliveries.length; i++) { 
                            // get the delivery
                            draw_delivery(res.deliveries[i]);
                        }
                        // set focus on textarea.body - TODO: this is not working!
                        //$('#body').focus();
                    } else {
                        $('.chats').html('Error loading conversation ('+res.status+').');
                    }
                },
                error: function(data) {
                    $('.chats').html('Error loading conversation.');
                }
            });
        });
    });
</script>
<%
# load preferences
gid = params[:gid]
o = BlackStack::Emails::Campaign.where(:id=>gid).first
name = o.name
id_export = o.id_export
# put fields in readonly mode ?
disabled = o.can_edit? ? '' : 'disabled'
# getting account 
account = BlackStack::Emails::Account.where(:id=>@login.user.id_account).first
%>

<%
q = "
    select 
        e.id as id,
        e.filename as filename
    from fl_export e
    join \"user\" u on (u.id=e.id_user and u.id_account='#{@login.user.id_account}')
    --where e.delete_time is null
    order by e.filename
"
%>

<!-- NavBar -->
<div class="mynavbar mysticky">
	<section class="row-fluid">	
		<div class="span6">
		    <%=nav3("Emails", "/emails", "Campaigns", "/emails/campaigns", name)%>
		</div>
		<div class="span6" style='text-align:right;'>
		    <a class='btn btn-blue' href='/emails/campaigns/<%=gid.to_guid%>/schedules'><i class='icon-calendar'></i> Schedules</a>
		    <a class='btn btn-blue' href='/emails/campaigns/<%=gid.to_guid%>/followups'><i class='icon-envelope'></i> FollowUps</a>
		</div>
	</section>
</div>

<!-- Single Panel -->
<section class="row-fluid">
	<div class="span12 box">
		<form method='post' action='/emails/filter_edit_campaign' class="form-horizontal">
            <input type='hidden' id='gid' name='gid' value='<%=gid%>'/>
            <input type="hidden" id="tags" name='tags' value='<%=o.tags.map { |t| t.name }.join(',')%>'>

            <div class="control-group">
                <label class="control-label" for="status"><b>Status</b></label>
                <div class="controls">
                    <span class='badge badge-<%=o.status_color%>'><%=o.status_name%></span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="name">Name</label>
                <div class="controls">
                    <input type="text" id="name" name='name' placeholder="Name" value='<%=name.to_s.encode_html%>' />
                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="export">Export List</label>
                <div class="controls">
                    <select type="text" id="id_export" name='id_export' placeholder="Export List" <%=disabled%> >
                        <option value=''></option>
                        <%
                        DB[q].each { |row|
                            selected = id_export.to_s == row[:id].to_s ? "selected" : ""
                            %>
                            <option value='<%=row[:id].to_s.to_guid%>' <%=selected%>><%=row[:filename].to_s.encode_html%></option>
                            <%
                            GC.start
                            DB.disconnect
                        }
                        %>
                    </select>
                </div>
            </div>

            <div class="control-group">
                <p><i class='icon-info-sign'></i> Add the tags of the addresses you want to use to run this campaign.</p>
                <p><i class='icon-info-sign'></i> If you don't assign addresses to the campagin, we'll use <a href='/emails/landing#dfy-outreach'>addresses from our DFY-Outreach</a>.</p>
                <label class="control-label" for="keyword">Tags</label>
                <div id='tags_container' style='width:500px'></div>
            </div>

            <div class="control-group">
                <div class="controls">
                    <button type="submit" class="btn btn-blue">Save</button>
                </div>
            </div>
        </form>
    </div>
</section>

<script>
    var tags_container = document.getElementById('tags_container');

    function update_hidden_fields() {
        // update hidden fields
        let i = 0; 
        let s = '';
        filtersJs.getPositiveValues(tags_container).forEach(function(value) {
            if (i>0) { s += ','; }
            s += value.trim();
            i++;
        });
        $('#tags').val(s);      
    }

    $(document).ready(function() {  
        // use filtersjs to draw a filter of tags in element with id tags
        filtersJs.draw(tags_container, {
            label: '',
            allowed_positive_keywords: true, // default value: true
            allowed_negative_keywords: false, // default value: false
            allowed_values: [
                <%=account.tags.size==0 ? '' : "'"+account.tags.map { |t| t.name.downcase }.join("','")+"'" %>
            ],
            // catch event: update hidden textfield when filter is changed    
            on_add_value: function (value) {
                update_hidden_fields();
            },
            // catch event: update hidden textfield when filter is changed    
            on_remove_value: function (value) {
                update_hidden_fields();
            },
        });

        // add tags to the filter
        <%
        o.outreaches.each { |t|
        %>
            filtersJs.addValue(tags_container, '<%=t.tag.name.downcase%>', true)
        <%
        }
        %>
    });
</script>
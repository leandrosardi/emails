<%
max_lines = 10000
account = BlackStack::Leads::Account.where(:id=>@login.user.id_account).first

id_export = @login.user.preference('emails.leads.upload.id_export', '', params[:id_export])
filename = @login.user.preference('emails.leads.upload.filename', '', params[:filename])
csv_content = @login.user.preference('emails.leads.upload.csv_content', '', params[:csv_content])
%>

<!-- NavBar -->
<div class="mynavbar mysticky">
	<section class="row-fluid">	
		<div class="span12">
			<%=nav4("Emails", "/emails", "Leads", "/emails/leads", "Uploads", "/emails/leads/uploads", "New")%>
		</div>
	</section>
</div>

<!-- Single Panel -->
<section class="row-fluid">
	<div class="span12 box">
		<h3>Upload Leads</h3>
		<p>Upload a CSV file with the following parameters:</p>
		<br/>

		<form method='post' action='/emails/leads/uploads/mapping'>
			<p>Choose an Export List to Upload your Leads</p>
			<select id="id_export" name="id_export">
				<option value="" <%=id_export.to_s.empty? ? 'selected' : ''%>>(Create New Export List)</option>
				<%
				account.exports.sort_by { |e| e.filename }.each do |export|
					%>
					<option value="<%=export.id%>" <%=id_export.to_s==export.id.to_guid ? 'selected' : ''%>><%=export.filename.encode_html%></option>
					<%
				end
				%>
			</select>

			<p>Write the name if the new Export List</p>
			<input type="text" id="filename" name="filename" placeholder="Filename" value='<%=filename.encode_html%>' />

			<p>Paste the CSV content here: <i style='color:blue;'>(tab separated)</i></p>
			<textarea id="csv_content" name="csv_content" class="span12 select-all" rows="10"><%=csv_content.encode_html%></textarea>
			<div class="theCount">Lines: <span id="linesUsed">0</span> (max allowed: <%=max_lines.to_label%>) <div>
			<br/>
			<button id="upload" class="btn btn-primary">Upload</button>
			<a id="cancel" class="btn" href='/emails/leads'>Cancel</a>
		</form>
	</div>
</section>

<script>
var lines = <%=max_lines.to_s%>;
var linesUsed = $('#linesUsed');

// enable or disable the input#filename if the select#id_export has chosen the (Create new Export List) option.
function enableFilename() {
	var id_export = $('#id_export').val();
	if (id_export == '') {
		$('#filename').removeAttr('disabled');
		$('#filename').focus();
	} else {
		$('#filename').attr('disabled', 'disabled');
	}
}

// validate the CSV content has not more than X lines
function validateCSV() {
	newLines = $('#csv_content').val().split("\n").length;
	linesUsed.text(newLines);
	if (newLines > lines) {
		linesUsed.css('color', 'red');
		$('#upload').attr('disabled', 'disabled');
	} else {
		linesUsed.css('color', 'green');
		$('#upload').removeAttr('disabled');
		$('#csv').focus();
	}
}

$(document).ready(function(){
    // validate CSV on any change on the textarea#csv_content
	$('#csv_content').on('keyup keydown change', function(e) {
		validateCSV()
    });
	// enable or disable the input#filename when select#id_export changes
	$('#id_export').on('change', function(e) {
		enableFilename();
	});
	// apply validations
	validateCSV();
	enableFilename();
	// select all on focus on #filename
	$('#filename').on('focus', function(e) {
		$(this).select();
	});
	// select all on focus on #csv_content
	$('#csv_content').on('focus', function(e) {
		$(this).select();
	});
});
</script>
<%
err = []
begin
    # getting account 
    account = BlackStack::Emails::Account.where(:id=>@login.user.id_account).first

    # map parameters
    gid = params[:gid]
    name = params[:name]
    id_export = params[:id_export]
    tags = params[:tags].to_s.split(',').map { |t| t.to_s.strip.downcase }.uniq

    # validate: the name is not empty
    err << "Name is required." if name.empty?

    # validate: the id_export is not empty
    err << "Export is required." if id_export.empty?

    # if any error happened, return to the edition screen
    raise err.join("\n") if err.size > 0

    # delete all the outreaches of the campaign
    DB.execute("DELETE FROM eml_outreach WHERE id_campaign = '#{gid.to_guid}'")

    # load, edit and save the campaign
    o = BlackStack::Emails::Campaign.where(:id=>gid).first
    o.name = name
    o.id_export = id_export
    o.save

    # create the outreaches
    tags.each { |tag|
        t = BlackStack::Emails::Outreach.new
        t.id = guid
        t.id_user = @login.user.id
        t.create_time = now
        t.id_campaign = o.id
        t.id_tag = account.tags.select { |g| g.name == tag }.first.id
        t.save
    }

    # return
    redirect "/emails/campaigns/#{o.id.to_guid}/edit?msg="+ CGI::escape('Campaign updated.')
rescue => e
    # return errors
    redirect "/emails/campaigns/#{params[:gid].to_guid}/edit?err="+ CGI::escape(e.message)
end
%>